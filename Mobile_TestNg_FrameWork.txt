

1)BaseClass

package AppiumPackage;

import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Driver;

import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.options.UiAutomator2Options;

public class BaseClass {
	AndroidDriver driver;
	public ExtentReports report;
	public ExtentTest test;

	@BeforeClass
	public void setUp() throws MalformedURLException {
		report = new ExtentReports("C:\\Users\\nm22220\\eclipse-workspace\\MobileTestNG\\reports\\Appium.html");
		test = report.startTest("Mobile");
		UiAutomator2Options options = new UiAutomator2Options();
		options.setDeviceName("ojas");
		options.setApp("C:\\Users\\nm22220\\Downloads\\General-Store.apk");

		driver = new AndroidDriver(new URL("http://127.0.0.1:4723"), options);

	}

	@AfterClass
	public void tearDown() {
		driver.quit();
		report.endTest(test);
		report.flush();
	}
}
***********************************************************************************************************


package utilities;


2)Reusable methods

import java.io.File;
import java.io.IOException;
import java.time.Duration;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.RemoteWebElement;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.google.common.collect.ImmutableMap;
import com.google.common.io.Files;

import io.appium.java_client.AppiumBy;
import io.appium.java_client.android.AndroidDriver;

public class ReuasbleMethods {
	public AndroidDriver driver;

	public ReuasbleMethods(AndroidDriver driver) {
		this.driver = driver;
	}

	public void longPress(WebElement element) {
		((JavascriptExecutor) driver).executeScript("mobile: longClickGesture",
				ImmutableMap.of("elementId", ((RemoteWebElement) element).getId()));
	}

	public void scrollIntoElement(String text) {
		driver.findElement(AppiumBy.androidUIAutomator("new UiScrollable(new UiSelector().scrollable(true))"
				+ ".scrollIntoView(new UiSelector().textContains(\"" + text + "\"))")).click();

	}

	public void dragGesture(WebElement element) {
		// Java
		((JavascriptExecutor) driver).executeScript("mobile: dragGesture",
				ImmutableMap.of("elementId", ((RemoteWebElement) element).getId(), "endX", 100, "endY", 100));
	}

	public void SwipeGesture() {
		// Java
		((JavascriptExecutor) driver).executeScript("mobile: swipeGesture", ImmutableMap.of("left", 100, "top", 100,
				"width", 200, "height", 200, "direction", "left", "percent", 0.75));
	}

	public void implicitWait() {
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	}

	public void max() {
		driver.manage().window().maximize();
	}

	public void min() {
		driver.manage().window().minimize();
	}

	public void forward1() {
		driver.navigate().forward();
	}

	public void back1() {
		driver.navigate().back();
	}

	public void refresh1() {
		driver.navigate().refresh();
	}

	public void Screenshot() throws IOException {
		TakesScreenshot ts = (TakesScreenshot) driver;
		File src = ts.getScreenshotAs(OutputType.FILE);

		File dest = new File("./screenshots/index1.png");

		Files.copy(src, dest);

	}

	public void generateReports(String reportName) {
		String path = "./screenshots/" + reportName + ".html";
		ExtentSparkReporter reporter = new ExtentSparkReporter(path);
		reporter.config().setReportName("Appium results");
		reporter.config().setDocumentTitle("Appium Project");

	}

	public void reports(String reportName) {
		String path = "./reports/" + reportName + ".html";
		ExtentSparkReporter reporter = new ExtentSparkReporter(path);
		reporter.config().setReportName("Appium results");
		reporter.config().setDocumentTitle("Appium Project");

	}
}
************************************************************************************************************************************************
package pageObjects;

3) Elements Stroing



import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;

import io.appium.java_client.AppiumBy;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.pagefactory.AndroidFindBy;
import io.appium.java_client.pagefactory.AppiumFieldDecorator;
import utilities.ReuasbleMethods;

public class LoginPageElements  {
	AndroidDriver driver;
	public LoginPageElements(AndroidDriver driver)
	{
		this.driver=driver;
		PageFactory.initElements(new AppiumFieldDecorator(driver), this);

}
	
	@AndroidFindBy(xpath ="//android.widget.EditText[@resource-id=\"com.androidsample.generalstore:id/nameField\"]")
	public WebElement NameTxtField;
	
	
	@AndroidFindBy (xpath="//android.widget.RadioButton[@resource-id=\"com.androidsample.generalstore:id/radioFemale\"]")
	public WebElement Radiobtnfield;
	
	@AndroidFindBy(id="android:id/text1")
	private WebElement CountryDorpDown;
	
	 @AndroidFindBy(id="com.androidsample.generalstore:id/btnLetsShop")
	 public WebElement LetsGo;
	 
	 
	 public void setNameField(String name)
		{
			NameTxtField.sendKeys(name);
		    driver.hideKeyboard();
		}
	 public void Radiobutton() {
		 Radiobtnfield.click();
		 
	 }
	  public void contry() {

		  CountryDorpDown.click();
		  
	  }
	
	 		 
   public void letsgo() {
		 LetsGo.click(); 
	 }


	 
	 
}
	 
	 
	
******************************************************************************************************************************************************************************
4)running Class

package AppiumPackage;



import java.io.IOException;
import java.time.Duration;

import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.relevantcodes.extentreports.LogStatus;

import pageObjects.LoginPageElements;

import utilities.ReuasbleMethods;

public class LoginPageImplements extends BaseClass {

	@Test
	public void fillForm() throws InterruptedException, IOException {
		WebDriverWait web = new WebDriverWait(driver, Duration.ofSeconds(10));
		LoginPageElements se = new LoginPageElements(driver);
		ReuasbleMethods re = new ReuasbleMethods(driver);
		re.implicitWait();
		se.setNameField("sweet");
		se.Radiobutton();
		Thread.sleep(2000);
		se.contry();
		re.scrollIntoElement("India");
		test.log(LogStatus.PASS, "India selected");
		se.letsgo();
		re.Screenshot();
	
	}

}


******************************************************************************************************************************************************
**Dependicies**


<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>MobileTestNG</groupId>
	<artifactId>MobileTestNG</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>MobileTestNG</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.appium</groupId>
			<artifactId>java-client</artifactId>
			<version>9.0.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.7.1</version>
			<scope>test</scope>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>4.16.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->
		<dependency>
			<groupId>com.aventstack</groupId>
			<artifactId>extentreports</artifactId>
			<version>5.0.9</version>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.22.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.relevantcodes</groupId>
			<artifactId>extentreports</artifactId>
			<version>2.41.2</version>
		</dependency>


		<dependency>
			<groupId>test</groupId>
			<artifactId>MobileTesting</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>
</project>
************************************************************************************************************************************************************************************************



















